{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","searchTerms","handleSearchChange","className","htmlFor","name","value","placeholder","onChange","PersonForm","addName","newName","newPhone","handleNameChange","handlePhoneChange","onSubmit","type","Persons","filteredPersons","handleDeleteClick","map","person","key","onDelete","Person","phone","data-name","data-id","onClick","Notification","message","text","App","useState","persons","setPersons","setNewName","setNewPhone","setSearchTerms","notification","setNotification","useEffect","personService","initialPersons","filter","RegExp","test","event","target","preventDefault","personObject","found","find","window","confirm","returnedPerson","notificationObject","setTimeout","catch","error","concat","deleteConfirm","dataset","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62ed11ad.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst destroy = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, destroy }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Filter = ({ searchTerms, handleSearchChange }) => {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <p>\n          <label htmlFor=\"addNameInput\">\n            Filter\n              </label>\n          <input\n            name=\"searchInput\"\n            value={searchTerms}\n            placeholder=\"Start typing a name\"\n            onChange={handleSearchChange}\n          />\n        </p>\n      </div>\n    </form>\n  )\n}\n\nconst PersonForm = ({ addName, newName, newPhone, handleNameChange, handlePhoneChange }) => {\n\n  return (\n    <form onSubmit={addName}>\n      <div className=\"form-group\">\n        <p>\n          <label htmlFor=\"addNameInput\">\n            Name\n              </label>\n          <input\n            name=\"addNameInput\"\n            value={newName}\n            onChange={handleNameChange}\n          />\n        </p>\n        <p>\n          <label htmlFor=\"addPhoneInput\">\n            Phone\n              </label>\n          <input\n            name=\"addPhoneInput\"\n            value={newPhone}\n            onChange={handlePhoneChange}\n          />\n        </p>\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({filteredPersons, handleDeleteClick}) => {\n  const rows = () => filteredPersons.map(person =>\n    <Person\n      key={person.id}\n      person={person}\n      onDelete={handleDeleteClick}\n    />\n  )\n\n  return (\n    <table>\n      <tbody>\n        {rows()}\n      </tbody>\n    </table>\n  )\n}\n\nconst Person = ({ person, onDelete }) => {\n  return (\n    <tr>\n      <td>{person.name} {person.phone} <button data-name={person.name} data-id={person.id} onClick={onDelete}>Delete</button></td>\n    </tr>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.text}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [searchTerms, setSearchTerms] = useState('')\n  const [notification, setNotification] = useState([])\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const filteredPersons = searchTerms\n    ? persons.filter(person => (new RegExp(searchTerms, 'i').test(person.name)))\n    : persons\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      phone: newPhone\n    }\n\n    const found = persons.find(person => (person.name === personObject.name))\n\n    if (found) {\n      if (window.confirm(`${newName} has already been added to your phonebook. Replace the old number with a new one?`)) {\n\n        personService\n          .update(found.id, personObject)\n          .then(returnedPerson => {\n              setPersons(persons.map(person => person.name !== newName ? person : returnedPerson))\n              const notificationObject = {\n                text: `${newName}'s information was updated successfully`,\n                type: 'success'\n              }\n              setNotification(notificationObject)\n              setTimeout(() => {\n                setNotification(null)\n              }, 5000)\n          })\n          .catch(error => {\n            const notificationObject = {\n              text: `${newName}'s information has already been removed from server`,\n              type: 'error'\n            }\n            setNotification(notificationObject)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n            setPersons(persons.filter(person => person.name !== newName))\n          })\n      }\n    } else {\n      personService\n      .create(personObject)\n      .then(data => {\n        setPersons(persons.concat(data))\n        setNewName('')\n        setNewPhone('')\n        const notificationObject = {\n          text: `${newName} added successfully`,\n          type: 'success'\n        }\n        setNotification(notificationObject)\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearchTerms(event.target.value)\n  }\n\n  const handleDeleteClick = (event) => {\n    let deleteConfirm = window.confirm(`Delete ${event.target.dataset.name}?`)\n    const id = event.target.dataset.id\n    const name = event.target.dataset.name\n    if (deleteConfirm) {\n      personService\n        .destroy(id)\n        .then( () => {\n          setPersons(persons.filter(p => p.id !== id)) \n          const notificationObject = {\n            text: `${name} deleted`,\n            type: 'success'\n          }\n          setNotification(notificationObject)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch(error => {\n          const notificationObject = {\n            text: `${name}'s information has already been removed from server`,\n            type: 'error'\n          }\n          setNotification(notificationObject)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.name !== name))\n        })\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Phonebook</h1>\n\n      <Notification message={notification} />\n\n      <Filter searchTerms={searchTerms} handleSearchChange={handleSearchChange} />\n      \n      <h2>Add New</h2>\n\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        newPhone={newPhone}\n        handleNameChange={handleNameChange}\n        handlePhoneChange={handlePhoneChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons filteredPersons={filteredPersons} handleDeleteClick={handleDeleteClick} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}